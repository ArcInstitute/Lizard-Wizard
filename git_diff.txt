diff --git a/bin/mask.py b/bin/mask.py
index 9e49aea..2414733 100755
--- a/bin/mask.py
+++ b/bin/mask.py
@@ -114,6 +114,10 @@ def mask_image(im_min: np.ndarray, min_object_size: int=500, max_segment_retries
 
     # Set the maximum diameter for segmentation
     max_diameter = im_min.shape[0]
+
+    if start_diameter > max_diameter:
+        logging.error("Start_diameter cannot exceed max_diameter. Setting start_diameter to max_diameter.")
+        start_diameter = max_diameter
             
     # Perform segmentation
     masks, success, final_diameter = segment_image(im_min, model, max_diameter, start_diameter)
@@ -132,8 +136,15 @@ def mask_image(im_min: np.ndarray, min_object_size: int=500, max_segment_retries
     while all(size < min_object_size for size in object_sizes) and retry_count < max_segment_retries:
         logging.warning(f"All objects are smaller than the threshold ({min_object_size}). Retrying segmentation attempt #{retry_count + 1}...")
         
+        if final_diameter >= max_diameter:
+            logging.warning(f"Diameter exceeded max dimensions. Resetting to {max_diameter}.")
+            final_diameter = max_diameter
+        else:
+            final_diameter += diameter_step
+            logging.info(f"Increasing diameter to {final_diameter} for retry #{retry_count + 1}...")
+
         # Perform segmentation
-        masks, success, final_diameter = segment_image(im_min, model, max_diameter, start_diameter=final_diameter+diameter_step)
+        masks, success, final_diameter = segment_image(im_min, model, max_diameter, start_diameter=final_diameter)
 
         # Check if segmentation was successful by detecting object sizes
         object_sizes = detect_object_sizes(masks)
