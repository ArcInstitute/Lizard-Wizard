profiles {
    conda {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false

        singularity.runOptions = '-B /tmp:/tmp'
        singularity.envWhitelist = 'XDG_CACHE_HOME,MPLCONFIGDIR,NUMBA_CACHE_DIR,FONTCONFIG_PATH,TMPDIR,TMP,HDMF_CACHE_DIR,PYNWB_CACHE_DIR'

        process {
            withLabel: caiman_env { 
                container = { "${params.singularity_path}/caiman.sif" } 
            }
            withLabel: cellpose_env { 
                container = { "${params.singularity_path}/cellpose.sif" }
                containerOptions = '--home $PWD'
            }
            withLabel: summary_env { 
                container = { "${params.singularity_path}/summary.sif" } 
            }
            withLabel: wizards_staff_env { 
                container = { "${params.singularity_path}/wizards_staff.sif" } 
                containerOptions = '--home $PWD --writable-tmpfs'
            }
        }
    }
    chimera_singularity {
        workDir                = getWorkDir()
        cache                  = "lenient"
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
    }
    docker {
        docker.enabled         = true
        docker.sudo            = false
        docker.runOptions      = "-u \$(id -u):\$(id -g) --platform=linux/amd64"
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    dev_zeiss_3d {
        params.input_dir        = "/large_storage/multiomics/projects/lizard_wizard/test_data/zeiss-3d/2024-04-17/Baseline"
        params.output_dir       = "/large_storage/multiomics/projects/lizard_wizard/test_output/zeiss-3d/"
        params.file_type        = "zeiss"
        params.test_image_names = "2024_04_17_SpheroidCalciumImaging_Baseline-01(1),2024_04_17_SpheroidCalciumImaging_Baseline-01(2)"
        params.llm              = "gpt-4o-mini"
    }
    dev_moldev_3d {
        params.input_dir        = "/large_storage/multiomics/projects/lizard_wizard/test_data/moldev-3d/Calcium_AAV-GCAMP_6wk_20240416/10xGCaMP-6wk-Baseline-Stream/80"
        params.output_dir       = "/large_storage/multiomics/projects/lizard_wizard/test_output/moldev-3d/"
        params.file_type        = "moldev"
        params.test_image_names = "10xGCaMP-6wk-Baseline-Stream_Stream_F08_s1_FITC,10xGCaMP-6wk-Baseline-Stream_Stream_D10_s1_FITC"
        params.llm              = "gpt-4o-mini"
    }
    dev_moldev_2d {
        params.input_dir        = "/large_storage/multiomics/projects/lizard_wizard/test_data/moldev-2d/Jay"
        params.output_dir       = "/large_storage/multiomics/projects/lizard_wizard/test_output/moldev-2d/"
        params.file_type        = "moldev"
        params.test_image_names = "20240628- 5wk CoCul B-D 4AP aB_Stream_B08_s3_FITC,20240628- 5wk CoCul B-D 4AP aB_Stream_B08_s1_FITC"
        params.use_2d           = true
        params.llm              = "gpt-4o-mini"
    }
    dev_moldev_2d_sim {
        params.output_dir     = "/large_storage/multiomics/projects/lizard_wizard/test_output/moldev-2d_sim"
        params.file_type      = "moldev"
        params.simulate       = true
        params.llm            = "gpt-4o-mini"
    }
    chimera {
        workDir               = getWorkDir()
        conda.cacheDir        = getCondaCacheDir()
        cache                 = "lenient"
    }
    vm {
        process.errorStrategy = "terminate"
        process.maxRetries    = 0
        params.max_cpus       = 24
        params.max_memory     = "64.GB"
        params.max_time       = "72.h"
    }
    slurm {
        process.executor      = "slurm"
        process.queue         = "cpu_preemptible"
        process.clusterOptions = "--requeue"
        process.errorStrategy = "retry"  // "terminate"
        process.maxRetries    = 2
        executor.queueSize    = 200
        params.max_cpus       = 80
        params.max_memory     = "900.GB"
        params.max_time       = "48.h"
    }
    gcp {
        workDir               = "gs://arc-genomics-nextflow/work"
        process.executor      = "google-batch"
        process.errorStrategy = "retry"
        process.maxRetries    = 3
        process.scratch       = true
        params.max_cpus       = 36
        params.max_memory     = "800.GB"
        params.max_time       = "72.h"
        google.project        = "arc-genomics"
        google.location       = "us-west1"
    } 
    report {
        report.enabled   = true
        report.overwrite = true
        report.file      = "${params.output_dir}/nf-report/${params.timestamp}.html"
    }
    trace {
        trace.enabled   = true
        trace.overwrite = true
        trace.file      = "${params.output_dir}/nf-trace/${params.timestamp}.txt"
        trace.fields    = "task_id,hash,native_id,name,status,exit,submit,container,cpus,time,disk,memory,attempt,submit,duration,realtime,%cpu,peak_rss,peak_vmem,rchar,wchar,workdir,scratch"
    }
}


